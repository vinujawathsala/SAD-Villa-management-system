/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.FrontOffice;

import GUI.HousekeepingOffice.HousekeepingOffice;
import GUI.MaintainerOffice.MaintainerOffice;
import GUI.Resturent.RestunrantOffice;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TUF_Heat_
 */
public class ProductRequest extends javax.swing.JPanel {

    private FrontOffice frontOffice;
    private RestunrantOffice restunrantOffice;
    private HousekeepingOffice housekeepingOffice;
    private MaintainerOffice maintainerOffice;

    /**
     * Creates new form ProductRequest
     */
    public ProductRequest(JFrame jFrame) {
        initComponents();
        if (jFrame.getClass().getName().endsWith("FrontOffice")) {
            this.frontOffice = (FrontOffice) jFrame;

        } else if (jFrame.getClass().getName().endsWith("RestunrantOffice")) {
            this.restunrantOffice = (RestunrantOffice) jFrame;

        } else if (jFrame.getClass().getName().endsWith("HousekeepingOffice")) {
            this.housekeepingOffice = (HousekeepingOffice) jFrame;
        }else if (jFrame.getClass().getName().endsWith("MaintainerOffice")) {
            this.maintainerOffice = (MaintainerOffice) jFrame;
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 50));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Products Request");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 828, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel1.setPreferredSize(new java.awt.Dimension(200, 500));

        jLabel2.setText("Name of Department");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Items");

        jButton2.setText("Select");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Request");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(20, 20, 20))
        );

        add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Product List", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (frontOffice != null) {
            this.frontOffice.removePanel();
        } else if (restunrantOffice != null) {
            this.restunrantOffice.removePanel();
        } else if (housekeepingOffice != null) {
            this.housekeepingOffice.removePanel();
        }else if (maintainerOffice != null) {
            this.maintainerOffice.removePanel();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (frontOffice != null) {
            new SelectProducts(frontOffice, true).setVisible(true);
            HashMap hashMap = this.frontOffice.getMap();

            if (!hashMap.isEmpty()) {
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                hashMap.forEach((key, value) -> {
                    boolean found = false;
                    for (int i = 0; i < jTable2.getRowCount(); i++) {
                        if (key.equals(String.valueOf(jTable2.getValueAt(i, 0)))) {
                            jTable2.setValueAt((Integer.parseInt(String.valueOf(value)) + (Integer.parseInt(String.valueOf(jTable2.getValueAt(i, 1))))), i, 1);
                            found = true;
                            break;
                        }
                    }

                    if (!found) {
                        Vector vector = new Vector();
                        vector.add(key);
                        vector.add(value);
                        model.addRow(vector);
                    }
                });

            }
        } else if (restunrantOffice != null) {
            new SelectProducts(restunrantOffice, true).setVisible(true);

            HashMap hashMap = this.restunrantOffice.getMap();

            if (!hashMap.isEmpty()) {
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                hashMap.forEach((key, value) -> {
                    boolean found = false;
                    for (int i = 0; i < jTable2.getRowCount(); i++) {
                        if (key.equals(String.valueOf(jTable2.getValueAt(i, 0)))) {
                            jTable2.setValueAt((Integer.parseInt(String.valueOf(value)) + (Integer.parseInt(String.valueOf(jTable2.getValueAt(i, 1))))), i, 1);
                            found = true;
                            break;
                        }
                    }

                    if (!found) {
                        Vector vector = new Vector();
                        vector.add(key);
                        vector.add(value);
                        model.addRow(vector);
                    }
                });

            }
        } else if (housekeepingOffice != null) {
            new SelectProducts(housekeepingOffice, true).setVisible(true);

            HashMap hashMap = this.housekeepingOffice.getMap();

            if (!hashMap.isEmpty()) {
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                hashMap.forEach((key, value) -> {
                    boolean found = false;
                    for (int i = 0; i < jTable2.getRowCount(); i++) {
                        if (key.equals(String.valueOf(jTable2.getValueAt(i, 0)))) {
                            jTable2.setValueAt((Integer.parseInt(String.valueOf(value)) + (Integer.parseInt(String.valueOf(jTable2.getValueAt(i, 1))))), i, 1);
                            found = true;
                            break;
                        }
                    }

                    if (!found) {
                        Vector vector = new Vector();
                        vector.add(key);
                        vector.add(value);
                        model.addRow(vector);
                    }
                });

            }
        }else if (maintainerOffice != null) {
            new SelectProducts(maintainerOffice, true).setVisible(true);

            HashMap hashMap = this.maintainerOffice.getMap();

            if (!hashMap.isEmpty()) {
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                hashMap.forEach((key, value) -> {
                    boolean found = false;
                    for (int i = 0; i < jTable2.getRowCount(); i++) {
                        if (key.equals(String.valueOf(jTable2.getValueAt(i, 0)))) {
                            jTable2.setValueAt((Integer.parseInt(String.valueOf(value)) + (Integer.parseInt(String.valueOf(jTable2.getValueAt(i, 1))))), i, 1);
                            found = true;
                            break;
                        }
                    }

                    if (!found) {
                        Vector vector = new Vector();
                        vector.add(key);
                        vector.add(value);
                        model.addRow(vector);
                    }
                });

            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
