/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.FrontOffice;

import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import model.MySQL;

/**
 *
 * @author TUF_Heat_
 */
public class TodayArrival extends javax.swing.JPanel {

    private FrontOffice frontOffice;

    /**
     * Creates new form TodayArrival
     */
    public TodayArrival(FrontOffice frontOffice) {
        initComponents();
        this.frontOffice = frontOffice;
        loadTable("");
    }

    private void loadTable(String name) {
        if (!name.isEmpty()) {
            try {
                ResultSet resultSet = MySQL.executeSearch("SELECT *,`guest_status`.name as `g_name`, `payment_method`.`name` as `pkg`, DATE(`arrival_date_time`) AS `a_date`, TIME(`arrival_date_time`) AS `a_time`, DATE(`departure_date_time`) AS `d_date`, TIME(`departure_date_time`) AS `d_time` FROM `guest_stays` "
                        + "INNER JOIN `rooms` ON `rooms`.room_id = `guest_stays`.room_id "
                        + "INNER JOIN `package` ON `package`.id = `guest_stays`.package_id "
                        + "INNER JOIN `payment_method` ON `payment_method`.id = `guest_stays`.payment_method "
                        + "WHERE `guest_name` = '"+name+"'");
                
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);

                while (resultSet.next()) {
                    Vector<String> vector = new Vector<>();
                    vector.add(resultSet.getString("guest_name"));
                    vector.add(resultSet.getString("mobile"));
                    vector.add(resultSet.getString("a_date"));
                    vector.add(resultSet.getString("a_time"));
                    vector.add(resultSet.getString("d_date"));
                    vector.add(resultSet.getString("d_time"));
                    vector.add(resultSet.getString("nights"));
                    vector.add(resultSet.getString("packs"));
                    vector.add(resultSet.getString("room_no"));
                    vector.add(resultSet.getString("special_requests"));
                    vector.add(resultSet.getString("pkg"));
                    vector.add(resultSet.getString("price"));
                    vector.add(resultSet.getString("payment_method"));
                    vector.add(resultSet.getString("g_name"));

                    model.addRow(vector);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            try {
                ResultSet resultSet = MySQL.executeSearch("SELECT *,`guest_status`.name as `g_name`, `payment_method`.`name` as `pkg`, DATE(`arrival_date_time`) AS `a_date`, TIME(`arrival_date_time`) AS `a_time`, DATE(`departure_date_time`) AS `d_date`, TIME(`departure_date_time`) AS `d_time` FROM `guest_stays` INNER JOIN `rooms` ON `rooms`.room_id = `guest_stays`.room_id INNER JOIN `package` ON `package`.id = `guest_stays`.package_id INNER JOIN `payment_method` ON `payment_method`.id = `guest_stays`.payment_method INNER JOIN `guest_status` ON `guest_status`.guest_status_id = `guest_stays`.guest_status_id ");
                
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);

                while (resultSet.next()) {
                    Vector<String> vector = new Vector<>();
                    vector.add(resultSet.getString("guest_name"));
                    vector.add(resultSet.getString("mobile"));
                    vector.add(resultSet.getString("a_date"));
                    vector.add(resultSet.getString("a_time"));
                    vector.add(resultSet.getString("d_date"));
                    vector.add(resultSet.getString("d_time"));
                    vector.add(resultSet.getString("nights"));
                    vector.add(resultSet.getString("packs"));
                    vector.add(resultSet.getString("room_no"));
                    vector.add(resultSet.getString("special_requests"));
                    vector.add(resultSet.getString("pkg"));
                    vector.add(resultSet.getString("price"));
                    vector.add(resultSet.getString("payment_method"));
                    vector.add(resultSet.getString("g_name"));

                    model.addRow(vector);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datePicker1 = new raven.datetime.component.date.DatePicker();
        timePicker1 = new raven.datetime.component.time.TimePicker();
        datePicker2 = new raven.datetime.component.date.DatePicker();
        timePicker2 = new raven.datetime.component.time.TimePicker();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 50));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Today Arrivals");

        jButton2.setText("Edit Records");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Search by name :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 286, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1)
                        .addComponent(jLabel2))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Mobile", "Arrival Date", "Arrival time", "Depature Date", "Depature Time", "Nights", "Packs", "Room No", "Special Request", "Package", "Price", "Payment Method", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(50);
        }

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.frontOffice.removePanel();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Checkin(frontOffice, true, false).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedRow() != -1) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                for (int j = 0; j < jTable1.getColumnCount(); j++) {

                    this.frontOffice.getMap().put(jTable1.getColumnName(j), jTable1.getValueAt(i, j));

                }

            }
            new Checkin(frontOffice, true, true).setVisible(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        loadTable(jTextField1.getText());
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private raven.datetime.component.date.DatePicker datePicker1;
    private raven.datetime.component.date.DatePicker datePicker2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private raven.datetime.component.time.TimePicker timePicker1;
    private raven.datetime.component.time.TimePicker timePicker2;
    // End of variables declaration//GEN-END:variables
}
